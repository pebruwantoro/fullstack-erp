# openapi.yml
openapi: 3.0.0
info:
  title: My Backend Application Swagger Document
  version: 1.0.0
  description: A sample API with documentation defined in YAML.
  contact:
    name: Doni Pebruwantoro
    email: pebruwantoro.doni@gmail.com

servers:
  - url: http://localhost:8080
    description: Development server

tags:
  - name: Users
    description: Operations related to users

paths:
  /v1/api/users/register:
    post:
      tags:
        - Users
      summary: Create new user account
      description: Creating a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '201':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
        '400':
          description: Bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/users/login:
    post:
      tags:
        - Users
      summary: Login user account
      description: Login a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
        '400':
          description: Bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/users/my-profile:
    get:
      tags:
        - Users
      summary: My profile account
      description: My profile account.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyProfileResponse'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

components:
  schemas:
    RegisterUserRequest:
      type: object
      properties:
        name:
          type: string
          description: Full name user
          example: John Doe
        email:
          type: string
          description: Email user
          example: john.doe@example.com
        password:
          type: string
          description: Password user
          example: test1234
        role:
          type: string
          description: Role user
          example: customer
      required:
        - name
        - email
        - password
        - role
    
    LoginUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email user
          example: john.doe@example.com
        password:
          type: string
          description: Password user
          example: test1234
      required:
        - email
        - password

    RegisterUserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f

    LoginUserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: object
          properties:
            token:
              type: string
              example: tokenebf04h1fbnane931-fjriekm
      
    MyProfileResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: object
          properties:
            id:
              type: string
              example: 93c06d43-caaa-4171-a352-6783bf55384f
            name:
              type: string
              example: John Doe
            email:
              type: string
              example: john.doe@example.com
            role:
              type: string
              example: customer

    BaseErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message: 
          type: string
          example: error