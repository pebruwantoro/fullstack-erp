# openapi.yml
openapi: 3.0.0
info:
  title: My Backend Application Swagger Document
  version: 1.0.0
  description: A sample API with documentation defined in YAML.
  contact:
    name: Doni Pebruwantoro
    email: pebruwantoro.doni@gmail.com

servers:
  - url: http://localhost:8080
    description: Development server

tags:
  - name: Users
    description: Operations related to users
  - name: Products
    description: Operations related to products
  - name: Quotations
    description: Operations related to quotations
  - name: Sales Orders
    description: Operations related to sales orders

paths:
  /v1/api/users/register:
    post:
      tags:
        - Users
      summary: Create new user account
      description: Creating a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '201':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
        '400':
          description: Bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/users/login:
    post:
      tags:
        - Users
      summary: Login user account
      description: Login a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
        '400':
          description: Bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/users/my-profile:
    get:
      tags:
        - Users
      summary: My profile account
      description: My profile account.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyProfileResponse'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/products:
    get:
      tags:
        - Products
      summary: Get List Product
      description: Get list product.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/products/{id}:
    get:
      tags:
        - Products
      summary: Get Detail Product
      description: Get detail product.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Product id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDetailProductResponse'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/quotations:
    post:
      tags:
        - Quotations
      summary: Create new quotation
      description: Creating a new quotation.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuotationRequest'
      responses:
        '201':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuotationResponse'
        '400':
          description: Bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
    
    get:
      tags:
        - Quotations
      summary: Get list quotations
      description: Get list quotations.
      security:
        - bearerAuth: []
      
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListQuotationResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'


  /v1/api/quotations/{id}/approve:
    put:
      tags:
        - Quotations
      summary: Approve quotation
      description: Approve quotation.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Product id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveQuotationResponse'
        '400':
          description: Bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /v1/api/sales-orders:
    post:
      tags:
        - Sales Orders
      summary: Create sales orders from approved quotations
      description: Automatically creates sales orders for all quotations with an 'approved' status.
      security:
        - bearerAuth: []
      responses:
        '201':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSalesOrdersResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

components:
  schemas:
    RegisterUserRequest:
      type: object
      properties:
        name:
          type: string
          description: Full name user
          example: John Doe
        email:
          type: string
          description: Email user
          example: john.doe@example.com
        password:
          type: string
          description: Password user
          example: test1234
        role:
          type: string
          description: Role user
          example: customer
      required:
        - name
        - email
        - password
        - role
    
    LoginUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email user
          example: john.doe@example.com
        password:
          type: string
          description: Password user
          example: test1234
      required:
        - email
        - password

    CreateQuotationRequest:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductQuotation'
          
      required:
        - products

    RegisterUserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f

    LoginUserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: object
          properties:
            token:
              type: string
              example: tokenebf04h1fbnane931-fjriekm
      
    MyProfileResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: object
          properties:
            id:
              type: string
              example: 93c06d43-caaa-4171-a352-6783bf55384f
            name:
              type: string
              example: John Doe
            email:
              type: string
              example: john.doe@example.com
            role:
              type: string
              example: customer

    GetListResponse:
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'

    GetDetailProductResponse:
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success get data
        data:
          type: object
          $ref: '#/components/schemas/Product'

    CreateQuotationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success create data
        data:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f

    ApproveQuotationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success approved quotation
        data:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f

    GetListQuotationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message: 
          type: string
          example: success approved quotation
        data:
          type: object
          properties:
            list:
              type: array
              items:
                $ref: '#/components/schemas/Quotation'
            pagination:
              type: object
              $ref: '#/components/schemas/Pagination'

    CreateSalesOrdersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: success create sales orders
    
    Product:
      type: object
      properties:
        id:
          type: string
          example: 026b47e8-cc12-4c1a-bc84-c6b72c3fd075
        name:
          type: string
          example: paper
        description:
          type: string
          example: good paper quality
        sku:
          type: string
          example: LPX-110
        price:
          type: integer
          example: 1200000
        stock:
          type: integer
          example: 100
        created_at:
          type: string
          example: 2025-07-16T01:49:51.362Z
        updated_at:
          type: string
          example: 2025-07-16T01:49:51.362Z

    ProductQuotation:
      type: object
      properties:
        id: 
          type: string
          format: uuid
          example: 7e8597d3-7077-4d33-af82-3563810afdde
        quantity:
          type: integer
          example: 5
        price:
          type: integer
          example: 10000

    Quotation:
      type: object
      properties:
        id:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f
        customer_id:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f
        status:
          type: string
          example: pending
        total_amount:
          type: integer
          example: 1200000
        items:
          type: array
          $ref: '#/components/schemas/QuotationItem'
        created_at:
          type: string
          example:  "2025-07-16T04:23:33.826Z"
        updated_at:
          type: string
          example:  "2025-07-16T04:23:33.826Z"
        deleted_at:
          type: string
        created_by:
          type: string
          example:  93c06d43-caaa-4171-a352-6783bf55384f
        updated_by:
          type: string
          example:  93c06d43-caaa-4171-a352-6783bf55384f
        deleted_by:
          type: string

    QuotationItem:
      type: object
      properties:
        id:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f
        quotation_id:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f
        product_id:
          type: string
          example: 93c06d43-caaa-4171-a352-6783bf55384f
        quantity:
          type: integer
          example: 100
        unit_price:
          type: integer
          example: 12000
        sub_total:
          type: integer
          example: 1200000
        created_at:
          type: string
          example:  "2025-07-16T04:23:33.826Z"
        updated_at:
          type: string
          example:  "2025-07-16T04:23:33.826Z"
        deleted_at:
          type: string
        
    
    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        total_page:
          type: integer
          example: 1
        total_data:
          type: integer
          example: 1

    BaseErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message: 
          type: string
          example: error

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT